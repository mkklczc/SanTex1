generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid()) @db.Uuid
  full_name     String    @db.VarChar(255)
  login         String    @unique @db.VarChar(100)
  password_hash String    @db.VarChar(255)
  email         String    @unique @db.VarChar(255)
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  roleId        String    @db.Uuid

  role          Role      @relation(fields: [roleId], references: [id])
  works         Work[]
}

model Role {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @unique @db.VarChar(100)
  description String?  @db.VarChar(255)

  users       User[]
}

model Material {
  id           String   @id @default(cuid()) @db.VarChar(36)
  name         String   @db.VarChar(255)
  type         String   @db.VarChar(100)
  manufacturer String   @db.VarChar(100)
  unit         String   @db.VarChar(20)
  unitPrice    Float    @db.Real
  tags         String[] // PostgreSQL поддерживает массив строк
  notes        String?  @db.Text
  createdAt    DateTime @default(now()) @db.Timestamp(6)
  updatedAt    DateTime @updatedAt @db.Timestamp(6)
}

model Equipment {
  id           String   @id @default(cuid()) @db.VarChar(36)
  name         String   @db.VarChar(255)
  type         String   @db.VarChar(100)
  manufacturer String   @db.VarChar(100)
  unit         String   @db.VarChar(20)
  unitPrice    Float    @db.Real
  tags         String[]
  status       String   @db.VarChar(50)
  quantity     Int      @db.Integer
  createdAt    DateTime @default(now()) @db.Timestamp(6)
  updatedAt    DateTime @updatedAt @db.Timestamp(6)
}

model ConstructionObject {
  id        String   @id @default(cuid()) @db.VarChar(36)
  name      String   @db.VarChar(255)
  location  String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  works     Work[]
}

model Work {
  id                  String   @id @default(cuid()) @db.VarChar(36)
  description         String   @db.Text
  startDate           DateTime @db.Timestamp(6)
  endDate             DateTime @db.Timestamp(6)
  status              String   @db.VarChar(50)
  createdAt           DateTime @default(now()) @db.Timestamp(6)
  updatedAt           DateTime @updatedAt @db.Timestamp(6)
  userId              String   @db.Uuid
  constructionObjectId String  @db.VarChar(36)

  user                User     @relation(fields: [userId], references: [id])
  constructionObject  ConstructionObject @relation(fields: [constructionObjectId], references: [id])
}
